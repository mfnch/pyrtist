(**expand:boxer-boot*)
(**boxer-version:0,2,1*)
include "g"
GUI = Void

(**boxer-refpoints:
bbox1 1 0.0 50.0 bbox2 1 100.0 0.0 p1 1 42.61758857142857 24.16107382550336
*)
(**end:expand*)// TUTORIAL EXAMPLE N.1
// Overview of the initial blank Box document

// This is a single-line comment 

(* and and this is a multi-line comment
   Multi-line comments (* can be *) nested *)

(* Boxer pre-parses the sources expanding macros in the form
   (**macro*) or (**macro:arguments*).
   This allows Boxer to insert useful data into the currently
   edited source before rendering it.

   For example, the define-all macro below defines all the
   points created in the GUI. Boxer replaces it with code
   like ``p1 = Point[...], p2 = Point[...], ...'' *)
(**expand:define-all*)
bbox1 = Point[.x=0.0, .y=50.0], bbox2 = Point[.x=100.0, .y=0.0]
p1 = Point[.x=42.6175885714, .y=24.1610738255]

(**end:expand*)

(* In this document we have three points called: bbox1, bbox2
   and p1. These three points correspond to the three little
   squares shown in the GUI window. You can select and move
   them with the mouse. At the same time, you can use them
   in the Box source. For example, you can print them: *)
Print["p1 is ", p1]

(* The line below creates an empty figure, named 'fg' *)
fg = Figure[

  (* Between the square brackets you can pass objects to the
     Figure. For example, ``Figure[object1, object2, ...]''
     The objects that 'Figure' receives are treated differently
     depending on their type. *)  

  (* In the line below, for example, a bounding box object 'BBox'
     is created and passed to 'Figure'. The object tells what
     portion of the plane should be taken to be the container
     for our figure.

     Note that the two points 'bbox1' and 'bbox2' are defined 
     automatically by the define-all macro. *)
  BBox[bbox1, bbox2]

]

(* We finally tell to Boxer that we want it to render the figure
   'fg' into the current view (so that the user can see it and
   interact with it. *)
(**expand:view:fg*)(**end:expand*)
