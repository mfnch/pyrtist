///Section: g
///Intro: Allows to control graphics at the lowest level.
///Desc: This module allows the user to pass a sequence of commands (similar
//  to metapost: move_to, line_to, close_path, stroke, etc.) to a Window
//  object. The commands are passed through an Obj object.
//  Most of the high level drawing routines are build (in Box) over this
//  base.
///Example:
//  include "raw"
//  w = Window[][
//    Obj[Obj[g.raw.move_to, (0, 0)]
//        Obj[g.raw.line_to, (10, 10)]
//        Obj[g.raw.line_to, (10, 0)]
//        Obj[g.raw.close_path]
//        Obj[g.raw.stroke]]
//  ]

#provide "g.raw"

include "g"
include "obj"

///Intro:
// pass a sequence of low-level commands to the Window via an Obj object
Obj@Window "GLib_Obj_At_Window" ?

g = ((Int save, restore, set_antialias,
          move_to, line_to, curve_to, close_path
          new_path, new_sub_path
          stroke, stroke_preserve, fill, fill_preserve, clip, clip_preserve
          reset_clip, push_group, pop_group_to_source, set_operator
          paint, paint_with_alpha, copy_page, show_page
          set_line_width, set_line_cap, set_line_join, set_miter_limit
          set_dash, set_fill_rule, set_source_rgba,
          text_path, translate,
          ext_joinarc_to, ext_arc_to, ext_set_font, ext_text_path) raw
     (Int default, none, gray, subpixel) antialias
     ((Int miter, round, bevel) join
      (Int butt, round, square) cap) line
     (Int winding, even_odd) fill_rule
     (Int clear, source, over, in, out, atop, dest, dest_over, dest_in
          dest_out, dest_atop, xor, add, saturate, multiply, screen, overlay
          darken, lighten, color_dodge, color_burn, hard_light, soft_light
          difference, exclusion, hsl_hue, hsl_saturation, hsl_color
          hsl_luminosity) operator)[]

g.raw = (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19
         20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35)
g.antialias = (0, 1, 2, 3)
g.line.join = (0, 1, 2)
g.line.cap = (0, 1, 2)
g.fill_rule = (0, 1)
g.operator = (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18
              19, 20, 21, 22, 23, 24, 25, 26, 27, 28)
