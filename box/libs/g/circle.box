#provide "g.circle"
///Section: g

include "raw"
include "style"
include "path"

///Intro: create a geometrical shape of type circle.
Circle = ^((Int center, radius) have
           Point center, Real radius, radius2, Style style)

(.[)@Circle[.have = (0, 0)]

///Intro: change the circle so that it passes through the given 3 points.
(Point p1, p2, p3)@Circle[
  p21 = 2.0*($.p2 - $.p1)
  p31 = 2.0*($.p3 - $.p1)
  sq1 = Norm2[$.p1]
  sq21 = Norm2[$.p2] - sq1
  sq31 = Norm2[$.p3] - sq1

  det = p21.x * p31.y - p21.y * p31.x
  [If[det == 0.0]
     Fail[Str["Cannot find the circle passing through "
              "the three points"]]]

  $$.center = Point[.y=p21.x*sq31 - p31.x*sq21
                    .x=p31.y*sq21 - p21.y*sq31] / det
  $$.radius = $$.radius2 = Norm[$.p1 - $$.center]
  $$.have.center = $$.have.radius = 1
]

///Intro: whether the circle is fully specified (has both center and radius).
Circle@IsValid[$.have.center && $.have.radius]

///Intro: set the center of the circle.
Point@Circle[.center = $, .have.center = 1]

///Intro: return the center of the circle.
Circle@Point[$.center]

///Intro: the radius of the circle.
Real@Circle[
  nr = $$.have.radius
  $$.radius2 = $
  [If[nr != 2], $$.radius = $, nr = 2
   Else, nr = 1]
  $$.have.radius = nr
]

///Intro: copy the circle shape.
Circle@Circle[
  [If[$.have.center], $$.center = $.center]
  [If[$.have.radius], $$.radius = $.radius]
  \ $$.style[$.style]
]

///Intro: convert a Circle to Obj
Circle@Obj[
  If[$.have.center && $.have.radius]
    Obj[$.center, $.radius, $.radius2]
  Else
    Fail[Str["Cannot convert Circle to Obj: the "
             Str[If[!$.have.center], "center", Else, "radius"]
             " is missing"]]
]

///Intro: convert an Obj to a Circle
Obj@Circle[
  [If[Num[$] != 3], Fail["Cannot convert Obj to Circle"]]
  .center = Point[$.Get[0]]
  .radius = Real[$.Get[1]]
  .radius2 = Real[$.Get[2]]
  .have = (1, 1)
]

///Intro: style to use when drawing the circle.
Style@Circle[\ .style[$]]

///Intro: pattern, color or gradient used for filling the circle.
Pattern@Circle[\ .style[$]]

///Intro: area of the Circle.
Circle@Area[If[$.have.radius], const.pi*$.radius**2, Else, 0.0]

///Intro: add the circle to the path.
Circle@Path[
  If[$.have.center && $.have.radius]
    radiusx = $.radius
    radiusy = $.radius2
    center = $.center
    one_zero = $.center + Point[.x=radiusx, .y=0.0]
    zero_one = $.center + Point[.x=0.0, .y=radiusy]
    Obj[const.raw.move_to, one_zero]
    Obj[const.raw.ext_arc_to, center, one_zero, zero_one, 0.0, 2.0*const.pi]
    .empty = 0
]

///Intro: pass the circle to the window for drawing.
Circle@Window[
  path = Path[$]
  If[!path.empty]
    path.cmdstream
    CmdStream[$.style]
]
