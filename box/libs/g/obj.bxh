#provide "obj"

Obj = ++CPtr

ObjType = Int

objtype = (ObjType empty, void, char, int, real, point, str, obj, type)[]
objtype = (0, 1, 2, 3, 4, 5, 7, 8, 9)

(.[)@Obj "GLib_Init_At_Obj" ?
(].)@Obj "GLib_Finish_At_Obj" ?
Char@Obj "GLib_Char_At_Obj" ?
INT@Obj "GLib_Int_At_Obj" ?
REAL@Obj "GLib_Real_At_Obj" ?
Point@Obj "GLib_Point_At_Obj" ?
Obj@Obj "GLib_Obj_At_Obj" ?
Str@Obj "GLib_Str_At_Obj" ?

Obj@Char "GLib_Obj_At_Char" ?
Obj@Int "GLib_Obj_At_Int" ?
Obj@Real "GLib_Obj_At_Real" ?
Obj@Point "GLib_Obj_At_Point" ?

Obj.Get = Obj
Int@Obj.Get "GLib_Int_At_Obj_Get" ?

Obj.GetType = ObjType
Int@Obj.GetType "GLib_Int_At_Obj_GetType" ?

Obj@Length "GLib_Obj_At_Length" ?

Obj@Str[
  // We need to define here how to stringify a string Obj
  // to avoid infinite recursion
  MyStr = Str
  Obj@MyStr "GLib_Obj_At_Str" ?

  "Obj["

  [l = Length[$]
  If[l > 0]
    i = 0, sep = ""
    [
      sep, sep = ", "

      [t = $.GetType[i], o = $.Get[i]
       If[t == objtype.empty], "Obj[]"
       Else[], If[t == objtype.char], Char[o]
       Else[], If[t == objtype.int], Int[o]
       Else[], If[t == objtype.real], Real[o]
       Else[], If[t == objtype.point], Point[o]
       Else[], If[t == objtype.str], MyStr['"', o, '"']
       Else[], If[t == objtype.obj], o]

      For[++i < l]
    ]
  ]

  "]"
]

Obj@Print[Str[$]]
