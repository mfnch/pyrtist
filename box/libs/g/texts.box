#provide "g.texts"
///Section: g

include "text"

///Intro: a collection of {type(Text)} shapes.
Texts = ^(Obj texts, Text last, Style style)

///Intro: set the style used to draw the text pieces.
Style@Texts[\ .style[$]]

///Intro: set the pattern, color or gradient to draw the text.
Pattern@Texts[\ .style[$]]

///Intro: add a {type(.@)} to the circle collection.
Text@Texts[\ .texts[$]]

///Intro: set the relative position of the text piece.
From@Texts[\ .last[$]]

///Intro: the font to use for the current text piece.
Font@Texts[\ .last[$], If[$.have.color], $.color]

///Intro: the position of the current text piece.
Point@Texts[\ .last[$]]

///Intro: the content of the current text piece.
Str@Texts[\ .last[$]]

///Intro: use the parameters given so far to create a new {type(Text)} and
// add it to the text collection.
(;)@Texts[$$.last, $$.last.text = ""]

///Intro: the number of texts in the {type(.@)} object.
Texts@Num[$[;].texts]

///Intro: get one {type(Text)} in the collection.
Texts.Get = Text

///Intro: index of the text in the collection.
Int@Texts.Get[$$ = Text[$$$.texts.Get[$]]]

///Intro: add the text pieces to the path.
Texts@Path[
  n = Num[$], i = 0
  [If[i < n], $.Get[i++], For[1]]
]

///Intro: pass the text to the window for drawing.
Texts@Window[
  path = Path[$]
  If[!path.empty]
    path.cmdstream
    CmdStream[$.style]
]

