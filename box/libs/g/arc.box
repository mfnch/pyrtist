#provide "g.arc"
///Section: g

include "raw"
include "style"
include "path"

///Intro: object representing a slice of a circle.
Arc = ^(Int have_angles, Int close
        Circle circle, Real angle_start, angle_end)

(.[)@Arc[
  .have_angles = 0
  .angle_start = 0.0
  .angle_end = 2.0*const.pi
  .close = 0
]

///Intro: set the arc so that it starts from p1, passes through p2,
//   and ends in p3.
(Point p1, p2, p3)@Arc[
  .circle = Circle[$]
  center = Point[$$.circle]
  start_point = $.p1 - center
  .angle_start = Atan2[start_point]
  end_point = $.p3 - center
  .angle_end = Atan2[end_point]
]

///Intro: sets the arc center and radius from the given circle.
Circle@Arc[.circle = $]

///Intro: set the style to use when drawint the arc.
Style@Arc[\ .circle[$]]

///Intro: pattern, color or gradient used for filling the circle.
Pattern@Arc[\ .circle[$]]

///Intro: set the start and end of the arc.
Real@Arc[
  [If[$$.have_angles == 0], $$.angle_start = $
   Else, $$.angle_end = $]
  $$.have_angles = ($$.have_angles % 2) + 1
]

///Intro: close the arc.
Close@Arc[.close = 1]

///Intro: add the arc to the path.
Arc@Path[
  If[$.circle.have.center && $.circle.have.radius]
    radius = $.circle.radius
    center = $.circle.center
    one_zero = center + Point[.x=radius, .y=0.0]
    zero_one = center + Point[.x=0.0, .y=radius]
    Obj[const.raw.move_to, center + radius*Vec[$.angle_start]]
    Obj[const.raw.ext_arc_to, center, one_zero, zero_one
        $.angle_start, $.angle_end]
    .empty = 0
]

///Intro: pass the arc to the window for drawing.
Arc@Window[
  path = Path[$, If[$.close], Obj[const.raw.close_path]]
  If[!path.empty]
    path.cmdstream
    CmdStream[$.circle.style]
]
