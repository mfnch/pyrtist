///Section: g

// Interface to Window.Text

Window.Text = Void
([)@Window.Text "window_text_begin" ?
(])@Window.Text "window_text_end" ?
Str@Window.Text "window_text_str" ?
Point@Window.Text "window_text_point" ?
(;)@Window.Text "window_text_pause" ?
OldStyle@Window.Text "window_text_style" ?
Color@Window.Text "window_text_color" ?
OldGradient@Window.Text "window_text_gradient" ?
Gradient@Window.Text[OldGradient[$]]

Style@Window.Text[OldStyle[$]]

Window.Text.Font = Void
Str@Window.Text.Font "window_text_font_str" ?
Real@Window.Text.Font "window_text_font_real" ?

Window.Text.From = Void
Point@Window.Text.From "window_text_from_point" ?

///Intro: font object: encodes type, size and color of the Font.
Font = ++(Str name, Real size, Color color, (Int color,) have)

(.[)@Font[$$.size = 4.2, $$.have.color = 0, $$.name = "sans"]

///Intro: the font name.
Str@Font[$$.name = $]

//Intro: the font size.
Real@Font[$$.size = $]

//Intro: the font color.
Color@Font[$$.color = $, $$.have.color = 1]

///Intro: print the object to screen.
Font@Print[
  color_part = Str[If[$.have.color], ", ", $.color]
  "Font[.name=\"", $.name, "\", .size=", $.size, color_part, "]"
]

Font@Window.Text[$$.Font[$.name, $.size], If[$.have.color], $.color]

Font@Obj[Obj[$.name, $.size]]

Obj@Font[
  .name = Str[$.Get[0]]
  .size = Real[$.Get[1]]
]
