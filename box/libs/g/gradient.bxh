///Section: g

#provide "g.gradient"

include "g"

///Intro: color gradient to be used for painting.
Grad = ++(Int type
          Point point1, point2
          Real real1, real2
          Obj colors)

(.[)@Grad[.type = 0]

///Intro: add a new color to the gradient
Color@Grad[\ $$.colors[Obj[$.r, $.g, $.b, $.a]]]

///Intro: the position of the color in the gradient (number between 0 and 1).
// For example, in
// ``Grad[Line[point1, point2], real1, color1, real2, color2, ...]``
// ``real1`` is the offset (along the line) for ``color1``.
// In other words it is the position in the line (``0`` corresponding to
// ``point1``, and ``1`` to ``point2``) where the gradient becomes equal to
// ``color1``.
Real@Grad[\ $$.colors[Obj[$]]]

///Intro: set the gradient shape to a line.
// The line should have two points and the color will change linearly
// between these two points.
Line@Grad[
  [If[Num[$] != 2]
     Fail["The line given to Gradient should have exactly 2 points"]]
  .type = 1
  .point1 = $.Get[0]
  .point2 = $.Get[1]

  Print["Line from ", $$.point1, " to ", $$.point2;]
]

///Intro: set the gradient shape to a circle.
Circles@Grad[
  n = Num[$]
  [If[n != 1 && n != 2]
     Fail["The Circles object given to Gradient "
          "should contain one or two circles"]]
  .type = 2
  circle1 = $.Get[0]
  circle2 = Circle[If[n >= 2], $.Get[1], Else[], circle1, 0]

  Print["Circle 1: center=", circle1.center, ", radius=", circle1.radius;
        "Circle 2: center=", circle2.center, ", radius=", circle2.radius;]
]

///Intro: convert the gradient into a command stream.
Grad@CmdStream[


]
