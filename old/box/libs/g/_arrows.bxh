///Section: g

include "g"

//----------------------------------------------------------------------------
// TWO DIMENSIONAL ARROW WITH BORDER

///Intro: arrow connecting two points.
Arrow = (Int type
         (Int points, reals, colors) num
         Point start, end
         Real width, head_width, head_length
         Color color1, color2, color3, color4)

(.[)@Arrow[.type = 0, .num = (0, 0, 0)]

///Intro: specifies initial and final points.
Point@Arrow[
  [np = $$.num.points, If[np == 0], $$.start = $, Else, $$.end = $]
  $$.num.points += 1
]

///Intro: specifies: width, head-width and head-length.
Real@Arrow[
  [nr = $$.num.reals
   If[nr == 0], $$.width = $
   Else, If[nr == 1], $$.head_width = $
   Else, $$.head_length = $]
  $$.num.reals += 1
]

///Intro: specifies the colors to use for the arrow.
Color@Arrow[
  [nc = $$.num.colors
   If[nc == 0], $$.color1 = $
   Else, If[nc == 1], $$.color2 = $
   Else, If[nc == 2], $$.color3 = $
   Else, $$.color4 = $]
  $$.num.colors += 1
]

///Intro: copy the arrow attributes.
Arrow@Arrow[$$ = $]

// A 2D specialisation of {type(Arrow)}.
Arrow_2D = ^(Arrow arrow,)

// How to draw 2D arrows...
Arrow_2D@Window[
  \ $$.Line[$.arrow.start, $.arrow.end]
]

// A 3D specialisation of {type(Arrow)}.
Arrow_3D = ^(Arrow arrow,)

// How to draw 3D arrows...
Arrow_3D@Window[]

///Intro: draw the arrow on the Window.
Arrow@Window[
  If[$.num.points >= 2]
    t = $.type
    [If[t == 0], Arrow_2D[.arrow = $]
     Else, If[t == 1], Arrow_3D[.arrow = $]]
]






Arrow2D = (Point p_start, Point p_end,
           Real width, head_length, head_width, border
           Color col_inside, col_border
           Int got_start, got_real, got_color, both)

Norm = Real
Point@Norm[$$ = Sqrt[$.x*$.x + $.y*$.y]]

(.[)@Arrow2D[
  $$.p_start = (0, 0)
  $$.p_end = (10, 10)
  $$.width = 2.0
  $$.head_width = 4.0
  $$.head_length = 4.0
  $$.border = 0.2
  $$.col_inside = color.white
  $$.col_border = color.black
  $$.got_color = 0
  $$.got_start = 0
  $$.got_real = 0
  $$.both = 0
]

([)@Arrow2D[
  $$.got_color = 0
  $$.got_start = 0
  $$.got_real = 0
  $$.both = 0
]

Arrow2D@Arrow2D[$$ = $]

Point@Arrow2D[
  [If[!$$.got_start], $$.p_start = $]
  [If[$$.got_start], $$.p_end = $]
  $$.got_start = 1
]

Real@Arrow2D[
  [If[$$.got_real == 0], $$.width = $]
  [If[$$.got_real == 1], $$.head_width = $]
  [If[$$.got_real == 2], $$.head_length = $]
  Print[If[$$.got_real > 2],
        "Arrow2D accepts just 3 reals (arrow width, head witdh, head_length):"
        " ignoring real number"]
  $$.got_real = Int[Min[3, $$.got_real + 1]]
]

Color@Arrow2D[
  [If[$$.got_color == 0], $$.col_inside = $]
  [If[$$.got_color == 1], $$.col_border = $]
  $$.got_color = ($$.got_color + 1) % 2
]

Arrow2D@Window[
  hw = $.head_width, hl = $.head_length
  w = 0.5*$.width, l = Norm[$.p_end - $.p_start] - hl
  a = Window[]

  \ a[If[$.both == 0]
    \ .Poly[(0, w), (l, w), (l, hw), (l+hl, 0), (l, -hw), (l, -w), (0, -w)
            Style[.Border[$.border, $.col_border]], $.col_inside]
  ]

  \ a[If[$.both == 1]
    \ .Poly[(0, 0), (hl, hw), (hl, w), (l, w), (l, hw), (l+hl, 0), (l, -hw),
            (l, -w), (hl, -w), (hl, -hw), (0, 0)
            Style[.Border[$.border, $.col_border]], $.col_inside]
  ]

  \ a.Hot["start", (0,0), "end", (l+hl, 0)]
  \ $$.Put[a, "rt", .Near["start", $.p_start], .Near["end", $.p_end]]
]

Arrow2D.Both = Void
([)@Arrow2D.Both[$$$.both = 1]

//----------------------------------------------------------------------------
// THREE DIMENSIONAL ARROW

Arrow3D = (Point pos1, pos2,
           Real width, head_length, head_width, border, perspective,
           Color col1, col2, col3
           Int got_color, got_point)

(.[)@Arrow3D[
  .pos1=(0, 0), .pos2=(10, 10),
   .width=3.0, .head_length=6.0, .head_width=5.0
  .border = 0.2, .perspective=0.5
  .col1 = color.black, .col2 = color.white, .col3 = color.white
  .got_color = 0, .got_point = 0
]

([)@Arrow3D[
  .got_color = 0, .got_point = 0
]

Point@Arrow3D[
  [If[$$.got_point == 0], $$.pos1 = $]
  [If[$$.got_point == 1], $$.pos2 = $]
  $$.got_point = ($$.got_point + 1) % 2
]

Color@Arrow3D[
  [If[$$.got_color == 0]
   $$.col1 = $, $$.col2 = Color[$, .Darker[0.8]], $$.col3 = Color[$, .Darker[0.5]]]
  [If[$$.got_color == 1], $$.col2 = $, $$.col3 = $]
  [If[$$.got_color == 2], $$.col3 = $]
  $$.got_color = ($$.got_color + 1) % 3
]

Arrow3D@Window[
  p = $.pos1, w = 0.5*$.width
  hl = $.head_length, hw = 0.5*$.head_width
  l = 0.5*(Norm[$.pos2 - $.pos1] - hl)
  d = $.perspective
  x0 = p.x - l, x1 = x0 + 2*l, x2 = x1 + $.head_length
  y2 = p.y, y0 = y2 - hw, y1 = y2 - w, y3 = y2 + w, y4 = y2 + hw

  a = Window[]

  g1 = Gradient[.Line[(x0, y1), (x0, y3)]
                $.col3, $.col2, 0.5, $.col1, $.col2, $.col3]
  s = Style[.Border[$.border]]

  // Base of Head
  \ a.Circle[s, $.col1, (x1, y2), d*hw/w, hw]

  // Shaft
  \ a.Poly[(x0, y1), 0, 1, (x0-d, y1), (x0-d, y2), (x0-d, y3), (x0, y3), 0, 0
           (x1, y3), 0, 1, (x1-d, y3), (x1-d, y2), (x1-d, y1), (x1, y1), g1, s]

  // Head
  d *= hw/w
  g2 = Gradient[.Line[(x0, y0), (x0, y4)]
                $.col3, $.col2, 0.5, $.col1, $.col2, $.col3]
  \ a.Poly[(x1, y0), 0, 1, (x1-d, y0), (x1-d, y2), (x1-d, y4), (x1, y4), 0, 0
           (x1, y4), (x2, y2), g2, s]
  \ a.Hot["begin", (x0-$.perspective, y2), "end", (x2, y2)]

  \ $$.Put[a, "rt", .Near["begin", $.pos1], .Near["end", $.pos2]]
]

