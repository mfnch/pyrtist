In version 0.3.1:
  BRIEFLY: minor feature enhancements.
  DETAILS:
  - Can now select and drag more points (just press shift and left click).
    Points can be selected, deselected and dragged. To cancel dragging just
    right click.
  - Adding syntax highlighting specific to the Box language (we were using
    C highlighting so far).

In version 0.3.0:
  BRIEFLY: the Box assistant was implemented.
  DETAILS:
  - Added a new tool, providing buttons which can be clicked in order to
    automatically create pieces of scripts in a easier way. The new tool (the
    Box assistant) is meant to provide guidance for new users and speed up
    the work for experienced users.
  - load and save dialogs remember last opened directory (independently).
  - allow cancel exit in window asking whether to save or not unsaved changes.
  - remember last window configuration (size of main window).

In version 0.2.0:
  BRIEFLY: major changes in viewer (most of the program was rewritten)
  DETAILS:
  - The view area was completely rewritten to allow zooming in and out
    and scrolling. Buffering is used to reduce the invokations of the box
    executable and enable faster updating. Failure to compile the Box program
    are signalled by shading the view and hiding the refpoints.
  - It is now possible to rotate the view area (change the way the window
    is split from horizontal to vertical). Boxer remembers the user choice
    when the program is closed and opened again later.
  - Bounding box is now visible and resizable using two refpoints.
  - Can make reference point markers bigger.
  - Can rotate the view and text editor around the window center.

In version 0.1.2:
  BRIEFLY: mainly bugfixes in the Windows port.
  DETAILS:
  - Improved launching of box by passing the right command line arguments.
  - Fixed bugs in the execution of Box in the Windows port.
  - Stopping a hanging Box application may now work also on MS Windows.
  - Added proper command line parser.

In version 0.1.1:
  BRIEFLY: major improvements, in particular in the way reference points
    are handled. Execution of Box subprocess can be halted (a separate thread
    is now dealing with the execution of the Box program).
  DETAILS:
  - the file format has been updated: the reference points are now Points
    objects (and not just tuples of Real-s). This allows to refer to the
    coordinates explicitly in the Box source. For example, you can write
    "gui1.x" to get the x coordinate of the reference point gui1. Before you
    had to do "Point[gui1].x". This led the user to define "pN = Point[guiN]"
    for every reference point.
  - a reference point manager has been added, which allows to actively select
    the name of the next reference point, to show and hide one or more
    reference points. Reference points can be selected using wildcards.
    For example "*" can be used to select all reference points, while "p*"
    can be used to select all those which begin with "p".
    When a reference point is deleted, the combo box entry gets its name
    so that the next point which will be created will have the same name
    as the one which just disappeared. This allows for easy recovery of
    accidentally removed points. At the same time the user can change this
    by inserting a new string in the combo box entry. He has full control
    over what is happening!
  - when clicking on one reference point for the first time, it gets selected.
    It becomes yellow and do not move, while the combo box shows the name
    of the point. You can then learn about the name of the point and hide
    it without moving it (the point cannot be dragged immediately, a second
    click is required for this).
  - the configuration of Boxer can now be read from file. The file will be
    $HOME/.boxer/config.cfg on Unix and $HOME/boxer_settings/config.cfg
    on Windows. This can be used to decide which Box executable to use,
    for example.
  - Can now stop manually the execution of Box. For example, if an infinite
    loop is accidentally inserted, then the user can stop Box from Boxer.
    Improved also the way the standard output of the Box instance is
    collected (don't work on Windows, yet).

