//!BOXER:VERSION:0:1:1

include "g"
GUI = Void
Window@GUI[]




//!BOXER:REFPOINTS:BEGIN
gui1 = Point[.x=0.0, .y=0.0], gui2 = Point[.x=-18.87, .y=14.535]
gui3 = Point[.x=21.42, .y=-14.79]
//!BOXER:REFPOINTS:END
// Example of parametric figure: a smiley which literaly loses
// his eyes.
//  t: is the time (controlled by the distance of the point
//     from the center of the smiley)
//  a: damping of bouncing events
//  g: acceleration due to gravity
//  v0: velocity for the first bouncing

include "tools"

p = Point[gui1]
t = Sqrt[p.x*p.x + p.y*p.y]/10.0

rate = 5*t

a = 0.8
g = 10.0
v0 = 9.5

Vers = Point
Real@Vers[angle=$*const.pi/180, $$=(Cos[angle], Sin[angle])]

//-------------------------------------------------------------------------------
// Some calculations to find the height of the pupils
t0 = 2.0*v0/g
t = t + t0/2.0
n  = Int[Log[(a - 1.0)*t/t0 + 1.0] / Log[a]]
aN = Exp[n*Log[a]]
vN = aN * v0
tN = t0 * (aN - 1.0) / (a - 1.0)
delta_t = t - tN
h = -delta_t * (vN - 0.5*g*delta_t) + v0*v0/(2.0*g)

sx = 5.0 - 0.0*(1.0-Exp[-rate])
sy = 0.5 + 1.0*(1.0-Exp[-rate])
q = (1.0-Exp[-rate])*3.0
w = (1.0-Exp[-rate])*0.05

//-------------------------------------------------------------------------------
// Parameters for the face of the smiley
r = 10                   // Radius
s = 0.4                  // Width of the contour lines
ro = 2.5                 // Radius of the eyes
rp = 0.4*ro              // Radius of the pupils
od = Point[(3.5, 2.0)]   // Position of the right eye
gr = 1                   // Cheek radius
gd = Point[(6.0, 2.0)]   // Position of the right cheek

//-------------------------------------------------------------------------------
os = Point[(-od.x, od.y)] // Left eye position
gs = Point[(-gd.x, gd.y)] // Left cheek position
// pd and ps are the position of the right and left pupils, respectively

pd = od - (0, h*ro)
ps = os - (0, h*ro)

cf_in  = Color[.r = .g = 1.0, .b=Min[0.2*t, 0.8]] // Face color
cf_out = Color[.r = .g = 0.8, .b = cf_in.b]

smile = Window[]

\ smile[
  \ .Circle[Style[.Fill[";"], .Border[color.black, s]]
            Gradient[.Circle[(0, 0), 0; r], cf_in, 0.8, cf_in, cf_out]
            (0, 0), r;                   // face
            p := (0, -4.5), dp = (0, -sy)
            Gradient[.Line[p-dp, p+4*dp], color.red, color.black]
            sx, sy, (0, -4.5);           // mouth
            color.white, os, ro; od;     // eyes
            color.black, rp, rp, pd; ps] // pupils

  // Hairs
  n = 3
  spacing = 30.0 // angle between each hair
  angle = 90.0 - spacing
  dangle = spacing/n
  i = -n
  color.black
  \ .Line[s, v: = Vers[angle], v*r, v*(r+q); For[angle += dangle, ++i <= n]]
  BBox[gui1, gui2, gui3]
]

GUI[smile]
